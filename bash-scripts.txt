#Script que busca arquivos que terminam com ".txt" no diretório informado pelo usuário.

#!/bin/bash

# Diretório de busca
echo "Informe diretório em que deseja realizar a busca: "
read diretorio

# Busca por arquivos .txt no diretório especificado
arquivos=$(find "$diretorio" -type f -name "*.txt")

# Verifica se foram encontrados arquivos
if [ -z "$arquivos" ]; then
    echo "Nenhum arquivo .txt encontrado no diretório $diretorio."
else
    echo "Arquivos .txt encontrados no diretório $diretorio:"
    echo "$arquivos"
fi

Certifique-se de salvar o script com uma extensão .sh, como "buscar_txt.sh", por exemplo. Em seguida, abra o terminal, navegue até o diretório onde o script está salvo e execute-o digitando ./buscar_txt.sh. Ele irá buscar por arquivos .txt no diretório informado e exibirá os resultados, caso encontre algum.

======================================================================

#Script que recebe o nome de um diretório informado pelo usuário e retorna a quantidade de arquivos que o diretório contém.

#!/bin/bash

# Solicita ao usuário o nome do diretório
echo "Digite o caminho completo do diretório:"
read diretorio

# Verifica se o diretório existe
if [ ! -d "$diretorio" ]; then
  echo "O diretório não existe."
  exit 1
fi

# Contagem de arquivos
contador=0

# Loop pelos arquivos no diretório
for arquivo in "$diretorio"/*; do
  if [ -f "$arquivo" ]; then
    contador=$((contador + 1))
  fi
done

# Exibe o resultado
echo "O diretório $diretorio contém $contador arquivos."

Neste script, usamos o comando read para solicitar ao usuário que digite o caminho completo do diretório que deseja verificar. O valor digitado pelo usuário é armazenado na variável diretorio.
Em seguida, verificamos se o diretório informado existe usando a condição [ -d "$diretorio" ]. Se o diretório não existir, exibimos uma mensagem de erro e saímos do script.
Em seguida, inicializamos um contador com o valor zero. Usamos um loop for para percorrer todos os arquivos no diretório. Se o arquivo for um arquivo regular (não um diretório), incrementamos o contador.
Por fim, exibimos a quantidade de arquivos encontrados no diretório informado.
Salve o script em um arquivo com uma extensão .sh, como contar_arquivos.sh, e execute-o no terminal usando o comando bash contar_arquivos.sh. Ele solicitará que você digite o caminho do diretório e exibirá a quantidade de arquivos presentes nele.

==================================================================

array=("lua" "sol" "praia") // cria array

echo ${array[*]} ou echo ${array[@]} // retorna array

echo ${#array[@]} ou echo ${#array[*]} // retorna tamanho do array  



#percorre o array, retornando cada elemento

for i in "${array[@]}"
do
	echo "$i"   
done



#percorre o array, retornando o primeiro caractere de cada elemento

for i in "${array[@]}"
do 
	echo "${i:0:1}"  
done



#usuário informa nome de arquivo e o script retorna se é 'file' ou 'diretorio'

read arquivo

if [ -f "$arquivo" ];then
	echo "file"
	else 
		if [ -d "$arquivo" ];then
			echo "diretório"
	fi
fi

========================

#retorna lista de todos os subdiretórios, excluindo os arquivos
ls -d */ 

========================
#
## cria diretórios e move arquivos para seus respectivos diretórios
#
#!/bin/bash

mkdir /home/dannilo/arquivos_txt

#lista e filtra arquivos com .txt, criando o array arquivo
arquivo=`ls | grep "\.txt"`

#
mv ${arquivo[*]} /home/dannilo/arquivos_txt

#listar arquivos .c e mover todos para uma pasta de arquivos_c

mkdir /home/dannilo/arquivos_c

arquiv=`ls | grep "\.c"`

mv ${arquivo[*]} /home/dannilo/arquivos_c

#listar arquivos .py e mover todos para uma pasta de arquivos_python

mkdir /home/dannilo/arquivos_python

arquivo=`ls | grep "\.py"`

mv ${arquivo[*]} /home/dannilo/arquivos_python

#listar arquivos .sh e mover todos para uma pasta de arquivos_shell

mkdir /home/dannilo/arquivos_shell

arquivo=`ls | grep "\.sh"`

mv ${arquivo[*]} /home/dannilo/arquivos_shell

#listar arquivos .php e mover todos para uma pasta arquivos_php

mkdir /home/dannilo/arquivos_php

arquivo=`ls | grep "\.php"`

mv ${arquivo[*]} /home/dannilo/arquivos_php 


=================================
